@import '~bulma/sass/utilities/initial-variables';
@import '~bulma/sass/utilities/functions';

@import './vars.scss';

//
// Customize bulma
//
@import '~bulma';
@import "../../node_modules/bulma-extensions/bulma-calendar/dist/css/bulma-calendar.sass";
@import "../../node_modules/bulma-extensions/bulma-checkradio/dist/css/bulma-checkradio.sass";
@import "../../node_modules/bulma-extensions/bulma-quickview/dist/css/bulma-quickview.sass";
@import "../../node_modules/bulma-extensions/bulma-switch/dist/css/bulma-switch.sass";


@import '../../node_modules/flatpickr/dist/flatpickr.css';
@import "../../node_modules/perfect-scrollbar/css/perfect-scrollbar.css";

//
// Helpers
//

// SPACING CSS - see usage: https://github.com/jgthms/bulma/issues/451#issuecomment-331758839
$sizeUnit: rem;
$marginKey: 'm';
$paddingKey: 'p';
$separator: '-';
$sizes: (
    ('none', 0),
    ('xxs', 0.125),
    ('xs', 0.25),
    ('sm', 0.5),
    ('md', 1),
    ('lg', 2),
    ('xl', 4),
    ('xxl', 8),
);
$positions: (
    ('t', 'top'),
    ('r', 'right'),
    ('b', 'bottom'),
    ('l', 'left')
);

@function sizeValue($key, $value) {
    @return if($key == 'none', 0, $value + $sizeUnit);
}

@each $size in $sizes {
    $sizeKey: nth($size, 1);
    $sizeValue: nth($size, 2);
    .#{$marginKey}#{$separator}#{$sizeKey} {
        margin: sizeValue($sizeKey, $sizeValue) !important;
    }
    .#{$paddingKey}#{$separator}#{$sizeKey} {
        padding: sizeValue($sizeKey, $sizeValue) !important;
    }
    @each $position in $positions {
        $posKey: nth($position, 1);
        $posValue: nth($position, 2);
        .#{$marginKey}#{$separator}#{$posKey}#{$separator}#{$sizeKey} {
            margin-#{$posValue}: sizeValue($sizeKey, $sizeValue) !important;
        }
        .#{$paddingKey}#{$separator}#{$posKey}#{$separator}#{$sizeKey} {
            padding-#{$posValue}: sizeValue($sizeKey, $sizeValue) !important;
        }
    }
}

//
// Global styles
//

html {
  height: 100%;
}
body, #__nuxt, #__layout {
  min-height: 100vh;
}
html, body {
  overflow: hidden;
}
.columns.full-height {
  height: 100vh;
}
#content {
  background: #F5F6FA;
  border-left: 1px solid $light-grey;
  box-shadow: 5px 0px 5px rgba(0, 0, 0, 0.1);
  min-height: 100vh;
  overflow: auto;
  overflow-x: hidden;
  .navbar {
    border-bottom: 1px solid $light-grey;
  }
}
.page-enter-active, .page-leave-active {
  transition: opacity .2s;
}
.page-enter, .page-leave-to {
  opacity: 0;
}
.navbar-item {
  text-transform: uppercase;
}
.super-button {
  span {
    font-size: 0.8em;
    font-weight: bold;
    margin-right: 15px;
  }
  i {
    font-size: 0.7em;
    border-radius: 50%;
    padding: 9px;
    width: 30px;
  }
  &.is-primary{
    box-shadow: 1px 3px 12px 3px rgba($primary, 0.30);
    i { background: darken($primary, 15%); }
  }
  &.is-dark {
    box-shadow: 1px 3px 12px 3px rgba(0,0,0,0.30);
    i { background: darken($grey, 15%); }
  }
}
.has-text-mono {
  font-family: monospace;
}
.has-corners {
  border-radius: 4px;
}
.drag-container {
  .handle {
    &:hover {
      cursor: move;
      cursor: grab;
      cursor: -moz-grab;
      cursor: -webkit-grab;
    }
  }
}
.main {
  margin: 20px;
}
.ps__rail-y, .ps__rail-x {
  z-index: 5;
}

.list-menu {
  background: #fff;
  .list-menu-item {
    display: flex;
    flex-direction: row;
    padding: 8px 5px;
    border-bottom: 1px solid #dbdbdb;

    .list-item, .left .icon, .right .icon {
      color: $grey;
    }

    &:hover, &.is-active {
      .list-item, .left .icon, .right .icon {
        color: $primary;
      }
    }

    .list-item {
      display: block;
      font-weight: bold;
      &.caption {
        font-weight: normal;
        font-size: 0.9rem;
      }
    }
    .left {
      width: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .center {
      padding: 0 5px;
      flex: 2;
    }
    .right {
      width: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

.nice-checkbox {
  border: 0.1rem solid #dbdbdb;
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 4px;
  position : relative;
  margin-right: 10px;

  &.is-active::after {
    content: '';
    position : absolute;
    display: inline-block;
    width: 0.375rem;
    height: 0.6rem;
    top: 0.3rem;
    left: 0.5rem;
    box-sizing: border-box;
    transform: rotate(45deg);
    border-width: .1rem;
    border-style: solid;
    border-color: #0084ff;
    border-top: 0;
    border-left: 0;
  }
}



//
// Animations
//

.fade-enter-active, .fade-leave-active {
  transition: opacity .5s;
}
.fade-enter, .fade-leave-to {
  opacity: 0;
}


.shake-enter-active, .shake-leave-active {
  animation: shake 0.6s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
}
.shake-enter, .shake-leave-to {
  animation: shake 0.6s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
}
@keyframes shake {
  10%, 90% { transform: translate3d(-1px, 0, 0); }
  20%, 80% { transform: translate3d(2px, 0, 0); }
  30%, 50%, 70% {  transform: translate3d(-4px, 0, 0); }
  40%, 60% { transform: translate3d(4px, 0, 0); }
}
